https://forum.arduino.cc/index.php?topic=87846.15
===============
Re: Accuracy of DS1307 Real Time Clock module
#24
Feb 11, 2012, 12:49 pm Last Edit: Feb 11, 2012, 12:58 pm by ninja2 Reason: 1
If anyone is interested in substantially improving the accuracy of the time from their DS1307 RTC I've come up with some coding that improves accuracy from (typically) 5 - 10 seconds lost per day to maybe a couple of seconds a week or better. The basic idea is:

1) monitor your RTC for a few days against a trustworthy clock such as here: http://time.is/Adelaide.

2) work out how many milliseconds you loose (or gain) per hour. This is 'drift_ms_hour' in my sketch which stores this in NVRAM on the RTC itself (it has 56 bytes of NVRAM)

3) manually set/sync the time on the RTC to be as close as you can get it to UTC (say < 1 sec off) and write down exactly this time, to the second and it's equivalent time_t value (seconds since 1 Jan 1970 or whatever it is). This is called timeWhenSet and is also stored in NVRAM.

4) Every time the sketch starts it reads timeWhenSet and drift_ms_hour from NVRAM, prints them, reads the (uncorrected) time from the RTC, and calculates how many seconds to add/subtract based on the drift_ms_hour characteric for this particular RTC. This corrected time is calculated every second from then on.

The sketch is attached as a ZIP (too large to paste in) most of which is plagiarised from others who really know how to code (like kurt's excellent scooterputer) but I'll claim the glory for the drift reduction functionality  :)

(Apologies for all the PROGMEM gymnastics in this sketch, it's stripped down from another sketch where I was having problems with SRAM overflowing and need to move all the strings into flash memory, and basically I'm too lazy to convert the strings back)

Sure I could solve this by buying an upmarket RTC llike the DS3231, but this technique does same job, is free , and was fun to get working  :)
* RTC6.zip 
2.92 KB
downloaded 204 times
dweston
avatar_dweston
*
Newbie
Posts: 29
Karma: 1  [add]

Re: Accuracy of DS1307 Real Time Clock module
#25
Feb 02, 2017, 09:19 am 
Hi ninja2,

Realising its been some considerable time since you posted on this topic I nevertheless wanted to thank you for your drift correction solution. For my situation it will work a treat however I'm having difficulty following the steps you've 'set out above to use it.

To see whether I could implement it:

I've reviewed your rtc6.ino code and updated it so that it works with the current IDE, but I couldn't locate the 'drift_ms_hour' variable you refer to in your para 3). There is a 'drift_factor' variable that is used to compute corrected time and this value can be pre-set in the sketch before uploading and written to NVRAM using the 'W' command in your sketch. 

Presuming you've modified the sketch to improve the process, I've had a go at working out your intentions as follows:

i)   Use the code to manually set the RTC to a noted GMT time via the 'S' command in your sketch. The intended time to be set is pre-written into the code within the 'RTC_SetTime()' sub routine and uploaded prior to running the sketch first up. This sets the RTC to a reference time and also stores the timeWhenSet Epoch time format in NVRAM.

ii)  After a suitable period - say a week - to reasonably assess the RTC drift against GMT, update the pre-set value for the 'drift_factor' variable in the 'processSerialCommands()' sub routine. Then upload and re-run the sketch using the 'W' command to write this variable into NVRAM.

iii) Thereafter run the sketch after a time and note any discrepancy between the reported corrected time 'timeC' and GMT. If close use the 'R' command to update the RTC to the corrected time.

iv)  After that run the sketch, presumably at regular intervals, and use the '-'/'+' commands to fine tune the drift calibration.


Have I managed to interpret this correctly?